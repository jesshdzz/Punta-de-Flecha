// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int         @id @default(autoincrement())
  nombre        String
  correo        String      @unique
  telefono      String
  contrasena    String
  puesto        RolUsuario
  fechaCreacion DateTime    @default(now())
  Estudiante    Estudiante?
  Profesor      Profesor?
}

model Estudiante {
  usuarioId Int       @id
  grupoId   Int?
  tramites  Tramite[]
  grupo     Grupo?    @relation(fields: [grupoId], references: [id])
  usuario   Usuario   @relation(fields: [usuarioId], references: [id])
  estado    EstadoEstudiante @default(Activo) 
}

model Profesor{
  usuarioId     Int @id 
  usuario       Usuario @relation(fields: [usuarioId], references: [id])
  materiales MaterialEducativo[]
}


model Grupo {
  id            Int           @id @default(autoincrement())
  nombre        String
  grado         Int
  estudiantes   Estudiante[]
  inscripciones Inscripcion[]
}

model Tramite {
  id           Int           @id @default(autoincrement())
  estudianteId Int
  tipo         TipoTramite
  estado       EstadoTramite
  fecha        DateTime      @default(now())
  inscripcion  Inscripcion?
  Pago         Pago?
  estudiante   Estudiante    @relation(fields: [estudianteId], references: [usuarioId])
}

model Inscripcion {
  tramiteId Int     @id
  grupoId   Int
  tramite   Tramite @relation(fields: [tramiteId], references: [id])
  grupo     Grupo   @relation(fields: [grupoId], references: [id])
}

model Pago {
  tramiteId Int      @id
  concepto  String
  monto     Float
  recibos   Recibo[]
  tramite   Tramite  @relation(fields: [tramiteId], references: [id])
}

model Recibo {
  id     Int      @id @default(autoincrement())
  pagoId Int
  monto  Float
  fecha  DateTime @default(now())
  pago   Pago     @relation(fields: [pagoId], references: [tramiteId])
}


model MaterialEducativo{
  id          Int  @id @default(autoincrement())
  titulo      String
  descripcion String
  categoria   String
  existencia  Boolean  @default(false)
  fecha       DateTime @default(now())
  tipoArchivo String
  profesorId  Int
  profesor    Profesor @relation(fields: [profesorId], references: [usuarioId])
  archivo     ArchivoSubido[]

}


model ArchivoSubido {
  id            Int               @id @default(autoincrement())
  materialId    Int
  nombreArchivo String
  urlNube       String
  material      MaterialEducativo @relation(fields: [materialId], references: [id])
}

enum RolUsuario {
  Administrador
  Profesor
  Estudiante
  Padre_familia
  Secretaria
}

enum EstadoTramite {
  Aceptado
  Pendiente
  Rechazado
}

enum TipoTramite {
  Inscripcion
  Reinscripcion
  BajaTemporal
  BajaDefinitiva
  Pago
}
enum EstadoEstudiante {
  Activo
  BajaTemporal
  BajaDefinitiva
}
