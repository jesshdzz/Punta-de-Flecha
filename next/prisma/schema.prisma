// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int          @id @default(autoincrement())
  nombre        String
  correo        String       @unique
  telefono      String
  contrasena    String
  puesto        RolUsuario
  fechaCreacion DateTime     @default(now())
  Estudiante    Estudiante[]
}

model Estudiante {
  id        Int       @id @default(autoincrement())
  usuarioId Int
  grupoId   Int?
  Tramite   Tramite[]
  grupo     Grupo?    @relation(fields: [grupoId], references: [id])
  usuario   Usuario   @relation(fields: [usuarioId], references: [id])
}

model Grupo {
  id          Int           @id @default(autoincrement())
  nombre      String
  grado       Int
  estudiantes Estudiante[]
  Inscripcion Inscripcion[]
}

model Tramite {
  id           Int           @id @default(autoincrement())
  estudianteId Int
  tipo         TipoTramite
  estado       EstadoTramite
  fecha        DateTime      @default(now())
  estudiante   Estudiante    @relation(fields: [estudianteId], references: [id])
  Inscripcion  Inscripcion[]
  Pago         Pago[]
}

model Inscripcion {
  id        Int     @id @default(autoincrement())
  tramiteId Int
  grupoId   Int
  tramite   Tramite @relation(fields: [tramiteId], references: [id])
  grupo     Grupo   @relation(fields: [grupoId], references: [id])
}

model Pago {
  id        Int      @id @default(autoincrement())
  tramiteId Int
  concepto  String
  monto     Float
  recibos   Recibo[]
  tramite   Tramite  @relation(fields: [tramiteId], references: [id])
}

model Recibo {
  id     Int      @id @default(autoincrement())
  pagoId Int
  monto  Float
  fecha  DateTime @default(now())
  pago   Pago     @relation(fields: [pagoId], references: [id])
}

enum RolUsuario {
  Administrador
  Profesor
  Estudiante
  Padre_familia
  Secretaria
}

enum EstadoTramite {
  Aceptado
  Pendiente
  Rechazado
}

enum TipoTramite {
  Inscripcion
  Reinscripcion
  Baja
  Pago
  Solicitud_documento
  Otro
}
